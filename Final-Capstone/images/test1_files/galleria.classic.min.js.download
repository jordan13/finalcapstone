/**
 * Galleria Classic Theme 2012-08-08
 * http://galleria.io
 *
 * Licensed under the MIT license
 * https://raw.github.com/aino/galleria/master/LICENSE
 *
 */

(function ($) {

    /*global jQuery, Galleria */

    Galleria.addTheme({
        name: 'classic',
        author: 'Galleria',
        css: 'galleria.classic.css',
        defaults: {
            transition: 'slide',
            thumbCrop: 'height',

            // set this to false if you want to show the caption all the time:
            _toggleInfo: true
        },
        init: function (options) {

            Galleria.requires(1.28, 'This version of Classic theme requires Galleria 1.2.8 or later');

            //get galleria
            var myGalleria = this;

            //get tag audio string
            var tagAudio;
            var sloop = '';
            if (options._hasAudio) {
                if (checkAudioTagSupport()) {
                    if (options._audioLoop) {
                        sloop = "loop='loop'";
                    }
                    tagAudio = "<audio id='audioPlayer" + options._moduleInstanceID + "' autoplay='autoplay' " + sloop + "><source src='" + options._audioSrc + "' /> </audio> "
                } else {
                    if (options._audioLoop) {
                        sloop = "loop='true'";
                    }
                    tagAudio = "<embed autoplay='true'" + sloop + " hidden='true' id='audioPlayer" + options._moduleInstanceID + "' name='audioPlayer" + options._moduleInstanceID + "' src='" + options._audioSrc + "' />"
                }
            }

            // add some elements
            if (options._hasAudio) {
                this.addElement('audio-ctrl', 'info-link', 'info-close');
                this.append({
                    'info': ['audio-ctrl', 'info-link', 'info-close']
                });
            } else {
                this.addElement('info-link', 'info-close');
                this.append({
                    'info': ['info-link', 'info-close']
                });
            }

            // cache some stuff
            var info = this.$('info-link,info-close,info-text'),
                touch = Galleria.TOUCH,
                click = touch ? 'touchstart' : 'click';

            if (options._hasAudio) {
                var ctrl = this.$('audio-ctrl'),
                    touch = Galleria.TOUCH,
                    click = touch ? 'touchstart' : 'click';
            }

            // show loader & counter with opacity
            this.$('loader,counter').show().css('opacity', 0.4);

            this.addElement('slideshow-play');

            this.append({
                'image-nav': ['image-nav-right', 'slideshow-play', 'image-nav-left']
            });
            var slideshow = this.$('slideshow-play'),
                touch = Galleria.TOUCH,
                click = touch ? 'touchstart' : 'click';
            slideshow.addClass('ui-helper-hidden');

            // binding to gallery pause event so we only show play button when gallery is paused
            this.bind(Galleria.PAUSE, function () {
                slideshow.removeClass('ui-helper-hidden');
            });

            // some stuff for non-touch browsers
            if (!touch) {
                this.addIdleState(this.get('image-nav-left'), { left: -50 });
                this.addIdleState(this.get('image-nav-right'), { right: -50 });
                this.addIdleState(this.get('slideshow-play'), { width: 0, height: 0 });
                this.addIdleState(this.get('counter'), { opacity: 0 });
            }

            // toggle info
            if (options._toggleInfo === true) {
                info.bind(click, function () {
                    info.toggle();
                });

                if (options._hasAudio) {
                    ctrl.bind(click, function () {
                        if (!options._allowAudio) {
                            options._allowAudio = true;
                            $(myGalleria.get('audio-ctrl')).removeClass('mute');
                            if (myGalleria._playing) {
                                if (checkAudioTagSupport()) {
                                    $("#audioPlayer" + options._moduleInstanceID)[0].play();
                                } else {
                                    $("#module-content-" + options._moduleInstanceID).append(tagAudio);
                                }
                            }
                        } else {
                            options._allowAudio = false;
                            $(myGalleria.get('audio-ctrl')).addClass('mute');
                            if (checkAudioTagSupport()) {
                                $("#audioPlayer" + options._moduleInstanceID)[0].pause();
                            } else {
                                $("#audioPlayer" + options._moduleInstanceID).remove();
                            }
                        }
                    });
                }
            } else {
                info.show();
                this.$('info-link, info-close').hide();
            }


            slideshow.bind(click, function () {
                //myGalleria.playToggle();
                $(this).addClass('ui-helper-hidden');  // hide play button after gallery started

                myGalleria.play();
                if (options._hasAudio && options._allowAudio) {
                    $("#audioPlayer" + options._moduleInstanceID).remove();
                    $("#module-content-" + options._moduleInstanceID).append(tagAudio);
                }

            });

            // bind some stuff
            this.bind('thumbnail', function (e) {

                if (!touch) {
                    // fade thumbnails
                    $(e.thumbTarget).css('opacity', 0.6).parent().hover(function () {
                        $(this).not('.active').children().stop().fadeTo(100, 1);
                    }, function () {
                        $(this).not('.active').children().stop().fadeTo(400, 0.6);
                    });

                    if (e.index === this.getIndex()) {
                        $(e.thumbTarget).css('opacity', 1);
                    }
                } else {
                    $(e.thumbTarget).css('opacity', this.getIndex() ? 1 : 0.6);
                }
            });

            this.bind('loadstart', function (e) {
                if (!e.cached) {
                    this.$('loader').show().fadeTo(200, 0.4);
                }

                this.$('info').toggle(this.hasInfo());

                $(e.thumbTarget).css('opacity', 1).parent().siblings().children().css('opacity', 0.6);
            });

            this.bind('loadfinish', function (e) {
                this.$('loader').fadeOut(200);
            });
        }
    });

}(jQuery));